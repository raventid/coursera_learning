#+TITLE: 225 Implement_stack_using_queues

#+begin_src c++
#include <queue>

using namespace std;

class MyStack {

public:
    queue<int> q1;
    queue<int> q2;
    int stack_top;

    MyStack() {

    }

    void push(int x) {
        q1.push(x);
        stack_top = x;
    }

    int pop() {
        while(q1.size() > 1) {
            stack_top = q1.front();
            q1.pop();

            q2.push(stack_top);
        }

        // Love C++, so nice, so great (sarcasm)
        // brilliant API!!!
        int elem = q1.front();
        q1.pop();

        // Changing queue pointers in O(1)
        swap(q1, q2);

        return elem;
    }

    int top() {
        return stack_top;
    }

    bool empty() {
        return q1.empty();
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */
#+end_src
