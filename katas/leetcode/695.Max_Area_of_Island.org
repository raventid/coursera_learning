#+TITLE: 695 Max_area_of_island

#+begin_src c++
class Solution {
public:
    int dfs(vector<vector<int>>& grid, int i, int j) {
        int rows = grid.size();
        int columns = grid[0].size();

        if(!(i >= 0 && i < rows && j >= 0 && j < columns)) {
            return 0;
        }
        if(grid[i][j] == 0) {
            return 0;
        }

        grid[i][j] = 0;

        int area = 1;
        area += dfs(grid, i - 1, j);
        area += dfs(grid, i + 1, j);
        area += dfs(grid, i, j - 1);
        area += dfs(grid, i, j + 1);

        return area;
    }

    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int best = 0;

        for(int i = 0; i < grid.size(); i++) {
            for(int j = 0; j < grid[0].size(); j++) {
                if(grid[i][j] == 1) {
                    best = std::max(best, dfs(grid, i, j));
                }
            }
        }

        return best;
    }
};
#+end_src
