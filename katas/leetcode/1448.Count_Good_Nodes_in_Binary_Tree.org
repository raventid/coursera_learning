#+TITLE: 1448 Count_good_nodes_in_binary_tree

#+begin_src c++
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int counter = 0;

    void inorder(TreeNode* root, int current_max_in_path) {
        if(!root) { return; }

        inorder(root->left, std::max(current_max_in_path, root->val));
        if(root->val >= current_max_in_path) {
            counter++;
        }
        inorder(root->right, std::max(current_max_in_path, root->val));
    }

    int goodNodes(TreeNode* root) {
        inorder(root, INT_MIN);
        return counter;
    }
};
#+end_src
