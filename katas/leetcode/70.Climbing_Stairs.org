#+TITLE: 70 Climbing_stairs

#+BEGIN_SRC rust
struct Solution {}

impl Solution {
    pub fn climb_stairs(n: i32) -> i32 {
        if n == 1 { return 1 }
        if n == 2 { return 2 }

        let mut dp = vec![0; (n as usize) + 1];
        dp[0] = 0;
        dp[1] = 1;
        dp[2] = 1;

        for stair in 1..(n as usize)+1 {
            if stair+1 <= n as usize { dp[stair+1] += dp[stair] }
            if stair+2 <= n as usize { dp[stair+2] += dp[stair] }
        }

        dp[n as usize]
    }
}

fn main() {
    {
        let n = 1;
        println!("{}", Solution::climb_stairs(n)); // 1
    }
    {
        let n = 2;
        println!("{}", Solution::climb_stairs(n)); // 2
    }
    {
        let n = 3;
        println!("{}", Solution::climb_stairs(n)); // 3
    }
    {
        let n = 10;
        println!("{}", Solution::climb_stairs(n)); // 89
    }
}
#+END_SRC
