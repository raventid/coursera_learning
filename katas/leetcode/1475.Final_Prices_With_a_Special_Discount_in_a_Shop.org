#+title: 1475 Final Prices With A Special Discount In A Shop

There is a good working naive solution, where we will just brutfoce and scan the rest of the vector,
from position `i`. But here I provide a monotonic stack solution, where we are collecting elements if they are in growing order and poping them if we found a smaller element.

#+begin_src cpp
class Solution {
public:
    vector<int> finalPrices(vector<int>& prices) {
        vector<int> result(prices);
        stack<int> s;

        for (int i = 0; i < prices.size(); i++) {
            while (!s.empty() && prices[s.top()] >= prices[i]) {
                result[s.top()] -= prices[i];
                s.pop();
            }

            s.push(i);
        }

        return result;
    }
};
#+end_src
