#+TITLE: 202 Happy_number

Because we are constantly reducing our input size we can really run loop for a long time and in a limited amount of time we either see 1 or we will enter the computation loop. It works, because we are constantly decreasing n, by taking it's numbers. Even with 9^2 + 9^2 + 9^2 we will never exceed 3 digit number.

#+begin_src c++
class Solution {
public:
    int compute(int n) {
        int computed = 0;

        while(n != 0) {
            int remainder = n % 10;
            n = n / 10;
            computed += remainder * remainder;
        }

        return computed;
    }

    bool isHappy(int n) {
        unordered_set<int> seen;

        while((n = compute(n)) != 1) {
            if(seen.contains(n)) {
                return false;
            }

            seen.insert(n);
        }

        return true;
    }
};
#+end_src
