#+TITLE: 217. Contains Duplicate

#+begin_src rust
struct Solution {}

impl Solution {
    pub fn contains_duplicate(nums: Vec<i32>) -> bool {
        let mut saw = std::collections::HashSet::new();

        for n in nums {
            if saw.contains(&n) {
                return true;
            } else {
                saw.insert(n);
            }
        }

        false
    }
}

fn main() {
    let vec = vec![1,1,1,3,3,4,3,2,4,2];
    let result = Solution::contains_duplicate(vec);
    println!("{:?}", result);
}
#+end_src

#+RESULTS:
: true


#+begin_src c++
#include <set>

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        set<int> s;
        for(const auto val : nums) {
            s.insert(val);
        }

        return s.size() != nums.size();
    }
};
#+end_src
