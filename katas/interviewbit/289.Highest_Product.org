#+TITLE: 289 Highest_product

Link:
https://www.interviewbit.com/problems/289


My attempt to do this in a linear time. The problem is the default values for max and min.

#+begin_src c++
int Solution::maxp3(vector<int> &A) {
    int max = INT_MIN, max2 = INT_MIN, max3 = INT_MIN;
    int min = INT_MAX, min2 = INT_MAX;

    for(int val : A) {

            if(val >= max) {
                max3 = max2;
                max2 = max;
                max = val;
            } else if(val >= max2) {
                max3 = max2;
                max2 = val;
            } else if(val >= max3) {
                max3 = val;
            }

            if(val <= min) {
                min2 = min;
                min = val;
            } else if(val <= min2) {
                min2 = val;
            }

    }

    int positive_prod = max * max2 * max3;
    int negative_prod = max * min * min2;

    return std::max(positive_prod, negative_prod);
}
#+end_src


Shorter, but simpler solution using sort.

#+begin_src c++
sort(A.begin(), A.end());
int n = A.size();
int val = A[n-1]*A[n-2]*A[n-3];
int ans = A[0]*A[1]*A[n-1];
return max(ans, val);
#+end_src
