// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */


// +++++++ DO EVERYTHING IN `b` FOLDER BEFORE DOING PC +++++++
CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

  PARTS:
  // Increment value:
  Inc16(in=localyDuplicatedOut, out=incrementedValue);

  // Increment current value or not?:
  Mux16(a=localyDuplicatedOut, b=incrementedValue, sel=inc, out=valueAfterIncrement);

  // Take the value we need, indicated by load bit:
  Mux16(a=valueAfterIncrement, b=in, sel=load, out=valueAfterLoad);

  // Reset value to 0 if needed and outputs to external and local buses:
  Mux16(a=valueAfterLoad, b=false, sel=reset, out=possiblyResetedValue);

  // Without this chip(sequential) you can't wire together localyDuplicatedOut and
  // other chips. It sees cycle in logical circuits and blows up. So we can use our
  // own output only if we have sequential logic backed in.
  Register(in=possiblyResetedValue, load=true, out=out, out=localyDuplicatedOut);
}
